program: "src/train_ddpm.py"
name: sweep_ddpm
method: bayes
metric:
  name: "Validation/Loss-ddpm"
  goal: minimize

parameters:
  models.diffusion.down_channels:
    values:
      - [256, 384, 512, 768]
      - [128, 256, 512, 768]
      - [64, 128, 512, 768]
  models.diffusion.mid_channels:
    values:
      - [768, 512]
      - [768, 512, 512]
  models.diffusion.t_emb_dim:
    distribution: q_log_uniform_values
    min: 128
    max: 1024
  models.diffusion.num_down_layers:
    distribution: int_uniform
    min: 1
    max: 4
  models.diffusion.num_mid_layers:
    distribution: int_uniform
    min: 1
    max: 4
  models.diffusion.num_up_layers:
    distribution: int_uniform
    min: 1
    max: 4
  models.diffusion.num_heads:
    values: [2, 4, 8, 16, 32]
  models.diffusion.conv_out_channels:
    distribution: q_log_uniform_values
    min: 32
    max: 512
    q: 32

  noise_scheduler.num_timesteps:
    distribution: q_log_uniform_values
    min: 500
    max: 3000
  noise_scheduler.beta_start:
    distribution: log_uniform_values
    min: 1e-5
    max: 1e-3
  noise_scheduler.beta_end:
    distribution: log_uniform_values
    min: 1e-3
    max: 1e-1
  ddpm.lr:
    distribution: log_uniform_values
    min: 1e-6
    max: 1e-3
  datamodule.batch_size:
    distribution: q_log_uniform_values
    min: 16
    max: 128

early_terminate:
  type: "hyperband"
  min_iter: 3

command:
  - ${env}
  - ${interpreter}
  - ${program}
  - ${args_no_hyphens}
